#pragma once

#include "./TMultiplyWithCarryRandomNumberGenerator.hpp"

#include "../SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace Common
{
namespace Math
{
   // This class automatically seeds itself.

   class TMultiplyWithCarryRandomNumberCommonGenerator :
      public TMultiplyWithCarryRandomNumberGenerator
   {
#if( /* {public} Instance default constructor. */ 1 )

      //

      public: explicit TMultiplyWithCarryRandomNumberCommonGenerator();

#endif
#if( /* {(public)} Instance copy constructor. */ 1 )

      // Could be autogenerated.
      // We don't need an instance move constructor.

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.

#endif
#if( /* {(public) operator =}. */ 1 )

      // Could be autogenerated.
      // We don't need a move assignment operator.

#endif
   };
}
}
