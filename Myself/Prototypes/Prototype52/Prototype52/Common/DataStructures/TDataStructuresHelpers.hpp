#pragma once

//#include "./.hpp"

#include "../SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace Common
{
namespace DataStructures
{
   //

   class TDataStructuresHelpers abstract sealed
   {
#if( /* //{(private)} Instance default constructor. */ 1 )

      // Cannot be autogenerated.

#endif
#if( /* //{(private)} Instance copy constructor. */ 1 )

      // Cannot be autogenerated.

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.

#endif
#if( /* //{(private) operator =}. */ 1 )

      // Cannot be autogenerated.

#endif

#if( /* {public RandomShuffleCollectionItems}. */ 1 )

      // yg? Does this method belong to this class?
      // TODO 3 yg? Do we use this method? Comment it out.

      public:
         template
            < typename TCollectionIterator_
            >
         static void RandomShuffleCollectionItems
            ( TCollectionIterator_ collectionBeginIterator,
              TCollectionIterator_ collectionEndIterator
            );

#endif

#if( /* {public GetMapItemsKeyMaxLength}. */ 1 )

      // TODO 3 yg? Rewrite this similarly to {Networking::TNetworkingHelpers::AddSocketAddressesFromUrls}
      // TODO 3 yg? and rename it to reflect the fact that it has nothing to do with map or key.
      // TODO 3 yg? Do we use this method? Comment it out.

      public:
         template
            < typename TMapIterator_
            >
         static auto GetMapItemsKeyMaxLength
            ( TMapIterator_ mapBeginIterator1,
              TMapIterator_ mapEndIterator1
            )
            -> decltype( mapBeginIterator1->first.length() );

#endif
   };
}
}
