#pragma once

//#include "./.hpp"

#include "../SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace Common
{
namespace Processes
{
   //

   class TProcessHelpers abstract sealed
   {
#if( /* //{(private)} Instance default constructor. */ 1 )

      // Cannot be autogenerated.

#endif
#if( /* //{(private)} Instance copy constructor. */ 1 )

      // Cannot be autogenerated.

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.

#endif
#if( /* //{(private) operator =}. */ 1 )

      // Cannot be autogenerated.

#endif

#if( /* {public TrySetProcessWorkingSetSize}. */ defined( _MSC_VER ) )

      // yg? This method logs any errors.
      // yg? This method should be named {Atomic...} but I kept the original API function name.

      public: static ::BOOL TrySetProcessWorkingSetSize
         ( __in ::HANDLE hProcess,
           __in ::SIZE_T dwMinimumWorkingSetSize,
           __in ::SIZE_T dwMaximumWorkingSetSize
         );

#endif
   };
}
}
