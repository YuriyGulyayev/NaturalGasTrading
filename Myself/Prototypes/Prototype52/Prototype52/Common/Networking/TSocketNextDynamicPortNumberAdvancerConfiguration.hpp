#pragma once

//#include "./.hpp"

#include "../SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace Common
{
namespace Networking
{
   // See the config file for more info.

   class TSocketNextDynamicPortNumberAdvancerConfiguration
   {
#if( /* {public NumberSocketNextDynamicPortNumberIncrements}. */ 1 )

      //
      public: int NumberSocketNextDynamicPortNumberIncrements;

#endif

#if( /* {public} Instance default constructor. */ 1 )

      //

      public: explicit TSocketNextDynamicPortNumberAdvancerConfiguration();

#endif
#if( /* {private} Instance copy constructor. */ 1 )

      //

      private: explicit TSocketNextDynamicPortNumberAdvancerConfiguration
         ( TSocketNextDynamicPortNumberAdvancerConfiguration const & source
         );

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.

#endif
#if( /* {private operator =}. */ 1 )

      //

      private: TSocketNextDynamicPortNumberAdvancerConfiguration & operator =
         ( TSocketNextDynamicPortNumberAdvancerConfiguration const & source
         );

#endif

#if( /* {public Validate}. */ 1 )

      // yg? This might need a parameter specifying configuration extraction state. Or better add a method with that parameter to the helpers.

      public: void Validate() const;

#endif
   };
}
}
