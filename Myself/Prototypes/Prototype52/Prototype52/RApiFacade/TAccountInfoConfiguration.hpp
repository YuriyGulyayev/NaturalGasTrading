#pragma once

//#include "./.hpp"

#include "../Common/SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace RApiFacade
{
   // Data from {::RApi::AccountInfo}.
   // This doesn't contain the the {pRmsInfo} parameter.

   class TAccountInfoConfiguration
   {
#if( /* {public sFcmId}. */ 1 )

      //
      public: ::std::string sFcmId;

#endif
#if( /* {public sIbId}. */ 1 )

      //
      public: ::std::string sIbId;

#endif
#if( /* {public sAccountId}. */ 1 )

      //
      public: ::std::string sAccountId;

#endif

#if( /* {public} Instance default constructor. */ 1 )

      //

      public: explicit TAccountInfoConfiguration();

#endif
#if( /* {private} Instance copy constructor. */ 1 )

      //

      private: explicit TAccountInfoConfiguration
         ( TAccountInfoConfiguration const & source
         );

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.

#endif
#if( /* {private operator =}. */ 1 )

      //

      private: TAccountInfoConfiguration & operator =
         ( TAccountInfoConfiguration const & source
         );

#endif

#if( /* //{public Initialize}. */ 1 )

      ////
      //
      //public: void Initialize();

#endif

#if( /* //{public Validate}. */ 1 )

//      // yg? This might need a parameter specifying configuration extraction state. Or better add a method with that parameter to the helpers.
//
//      public: void Validate() const;

#endif
   };
}
