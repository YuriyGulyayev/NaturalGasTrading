#pragma once

//#include "./.hpp"

#include "../Common/SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace RApiFacade
{
   // See the config file for more info.
   // This doesn't contain the {pCallbacks} parameter as it can't come from a config file.

   class TLogInParamsConfiguration
   {
#if( /* {public sUser}. */ 1 )

      //
      public: ::std::string sUser;

#endif
#if( /* {public sPassword}. */ 1 )

      //
      public: ::std::string sPassword;

#endif
#if( /* //{public sIhCnnctPt}. */ 1 )

      // Not used.
      //public: ::std::string sIhCnnctPt;

#endif
#if( /* {public sMdCnnctPt}. */ 1 )

      //
      public: ::std::string sMdCnnctPt;

#endif
#if( /* //{public sPnlCnnctPt}. */ 1 )

      // Not used.
      //public: ::std::string sPnlCnnctPt;

#endif
#if( /* {public sTsCnnctPt}. */ 1 )

      //
      public: ::std::string sTsCnnctPt;

#endif

#if( /* {public} Instance default constructor. */ 1 )

      //

      public: explicit TLogInParamsConfiguration();

#endif
#if( /* {private} Instance copy constructor. */ 1 )

      //

      private: explicit TLogInParamsConfiguration
         ( TLogInParamsConfiguration const & source
         );

#endif
#if( /* {public} Instance move constructor. */ 1 )

      //

      public: TLogInParamsConfiguration
         ( TLogInParamsConfiguration && source
         );

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.

#endif
#if( /* {private operator =}. */ 1 )

      //

      private: TLogInParamsConfiguration & operator =
         ( TLogInParamsConfiguration const & source
         );

#endif
#if( /* {public operator =}. */ 1 )

      //

      public: TLogInParamsConfiguration & operator =
         ( TLogInParamsConfiguration && source
         );

#endif

#if( /* {public Assign}. */ 1 )

      // yg? Should this be named {Move}?

      public: void Assign
         ( TLogInParamsConfiguration && source
         );

#endif

#if( /* {public Validate}. */ 1 )

      // yg? This might need a parameter specifying configuration extraction state. Or better add a method with that parameter to the helpers.

      public: void Validate() const;

#endif
   };
}
