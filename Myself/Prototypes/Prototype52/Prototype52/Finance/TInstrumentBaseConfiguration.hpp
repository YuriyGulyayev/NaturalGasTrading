#pragma once

//#include "./.hpp"

#include "../Common/SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace Finance
{
   // TODO 3 yg? This class is a placeholder. Some members should be moved here from derived classes.
   // TODO 3 yg? We will need a helper method to extract this configuration.
   // See the config file for more info.

   class TInstrumentBaseConfiguration abstract
   {
#if( /* {protected} Instance default constructor. */ 1 )

      //

      protected: explicit TInstrumentBaseConfiguration();

#endif
#if( /* {private} Instance copy constructor. */ 1 )

      //

      private: explicit TInstrumentBaseConfiguration
         ( TInstrumentBaseConfiguration const & source
         );

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.
      // This probably doesn't need to be {virtual}.

#endif
#if( /* {private operator =}. */ 1 )

      //

      private: TInstrumentBaseConfiguration & operator =
         ( TInstrumentBaseConfiguration const & source
         );

#endif

#if( /* {public Validate}. */ 1 )

      // yg? This might need a parameter specifying configuration extraction state. Or better add a method with that parameter to the helpers.
      // This probably doesn't need to be {virtual}.

      public: void Validate() const;

#endif
   };
}
