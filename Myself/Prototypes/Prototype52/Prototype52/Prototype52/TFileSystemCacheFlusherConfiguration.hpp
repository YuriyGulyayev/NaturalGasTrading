#pragma once

//#include "./.hpp"

#include "../Common/SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace Prototype52
{
   // See the config file for more info.

   class TFileSystemCacheFlusherConfiguration
   {
#if( /* {public FileSystemCacheFlushingApplicationFilePathName}. */ 1 )

      //
      public: ::std::string FileSystemCacheFlushingApplicationFilePathName;

#endif

#if( /* {public} Instance default constructor. */ 1 )

      //

      public: explicit TFileSystemCacheFlusherConfiguration();

#endif
#if( /* {private} Instance copy constructor. */ 1 )

      //

      private: explicit TFileSystemCacheFlusherConfiguration
         ( TFileSystemCacheFlusherConfiguration const & source
         );

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.

#endif
#if( /* {private operator =}. */ 1 )

      //

      private: TFileSystemCacheFlusherConfiguration & operator =
         ( TFileSystemCacheFlusherConfiguration const & source
         );

#endif

#if( /* {public Validate}. */ 1 )

      // yg? This might need a parameter specifying configuration extraction state. Or better add a method with that parameter to the helpers.

      public: void Validate() const;

#endif
   };
}
