#pragma once

#include "./TEconomicReportReceiverBaseConfiguration.hpp"

#include "../Common/SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace Prototype52
{
   // See the config file for more info.

   class TEconomicReportReceiverViaTcpBaseConfiguration abstract :
      public TEconomicReportReceiverBaseConfiguration
   {
#if( /* {public EconomicReportSenderIPHostName}. */ 1 )

      //
      public: ::std::string EconomicReportSenderIPHostName;

#endif
#if( /* {public EconomicReportSenderIPPortNumber}. */ 1 )

      //
      public: unsigned short EconomicReportSenderIPPortNumber;

#endif
#if( /* {public LocalIPHostName}. */ 1 )

      //
      public: ::std::string LocalIPHostName;

#endif
#if( /* //{public SocketKeepAliveTimeoutTimeSpanMilliseconds}. */ 1 )

      ////
      //public: int SocketKeepAliveTimeoutTimeSpanMilliseconds;

#endif
#if( /* //{public SocketKeepAliveIntervalMilliseconds}. */ 1 )

      ////
      //public: int SocketKeepAliveIntervalMilliseconds;

#endif

#if( /* {(protected)} Instance default constructor. */ 1 )

      // Could be autogenerated.

#endif
#if( /* //{(private)} Instance copy constructor. */ 1 )

      // Cannot be autogenerated.

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.
      // {virtual}.

#endif
#if( /* //{(private) operator =}. */ 1 )

      // Cannot be autogenerated.

#endif

#if( /* {public Validate}. */ 1 )

      // yg? This might need a parameter specifying configuration extraction state. Or better add a method with that parameter to the helpers.
      // TODO 3 yg? If I implement this method I will need to make it {virtual}.

      public: void Validate() const;

#endif
   };
}
