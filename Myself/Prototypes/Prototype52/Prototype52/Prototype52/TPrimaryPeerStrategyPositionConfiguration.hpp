#pragma once

#include "./TSecondaryPeerStrategyPositionConfiguration.hpp"
#include "./TPreEntryOrdersSendingProtectionConfiguration.hpp"

#include "../Common/SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace Prototype52
{
   // See the config file for more info.

   class TPrimaryPeerStrategyPositionConfiguration :
      public TSecondaryPeerStrategyPositionConfiguration
   {
#if( /* {public PreEntryOrdersSendingProtectionConfiguration}. */ 1 )

      //
      public: TPreEntryOrdersSendingProtectionConfiguration PreEntryOrdersSendingProtectionConfiguration;

#endif

#if( /* {public} Instance default constructor. */ 1 )

      //

      public: explicit TPrimaryPeerStrategyPositionConfiguration();

#endif
#if( /* //{(private)} Instance copy constructor. */ 1 )

      // Cannot be autogenerated.

#endif
#if( /* {public} Instance move constructor. */ 1 )

      //

      public: TPrimaryPeerStrategyPositionConfiguration
         ( TPrimaryPeerStrategyPositionConfiguration && source
         );

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.
      // This doesn't need to be virtual.

#endif
#if( /* //{(private) operator =}. */ 1 )

      // Cannot be autogenerated.

#endif
#if( /* {public operator =}. */ 1 )

      // This doesn't need to be virtual.

      public: TPrimaryPeerStrategyPositionConfiguration & operator =
         ( TPrimaryPeerStrategyPositionConfiguration && source
         );

#endif

#if( /* {public Assign}. */ 1 )

      // This doesn't need to be virtual.
      // yg? Should this be named {Move}?

      public: void Assign
         ( TPrimaryPeerStrategyPositionConfiguration && source
         );

#endif

#if( /* {public Validate}. */ 1 )

      // This doesn't need to be virtual.
      // yg? This might need a parameter specifying configuration extraction state. Or better add a method with that parameter to the helpers.

      public: void Validate() const;

#endif
   };
}
