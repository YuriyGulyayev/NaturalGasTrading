#pragma once

//#include "../RApiFacade/TOrderTypeCode.hpp"

#include "../Common/SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace Prototype52
{
   // See the config file for more info.

   class TEntryOrderConfiguration
   {
#if( /* //{public TypeCode}. */ 1 )

      ////
      //public: ::RApiFacade::TOrderTypeCode TypeCode;

#endif
#if( /* {public Quantity}. */ 1 )

      //
//TODO I uncommented this.
      public: double Quantity;

#endif
#if( /* {public TriggerPriceOffset1}. */ 1 )

      //
      public: double TriggerPriceOffset1;

#endif
#if( /* {public TriggerPriceOffset2}. */ 1 )

      //
      public: double TriggerPriceOffset2;

#endif
#if( /* //{public LimitPriceOffset}. */ 1 )

      ////
      //public: double LimitPriceOffset;

#endif
#if( /* //{public GoodForTimeSpanMilliseconds}. */ 1 )

      ////
      //public: int GoodForTimeSpanMilliseconds;

#endif

#if( /* {public} Instance default constructor. */ 1 )

      //

      public: explicit TEntryOrderConfiguration();

#endif
#if( /* {private} Instance copy constructor. */ 1 )

      //

      private: explicit TEntryOrderConfiguration
         ( TEntryOrderConfiguration const & source
         );

#endif
#if( /* {public} Instance move constructor. */ 1 )

      //

      public: TEntryOrderConfiguration
         ( TEntryOrderConfiguration && source
         );

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.

#endif
#if( /* {private operator =}. */ 1 )

      //

      private: TEntryOrderConfiguration & operator =
         ( TEntryOrderConfiguration const & source
         );

#endif
#if( /* {public operator =}. */ 1 )

      //

      public: TEntryOrderConfiguration & operator =
         ( TEntryOrderConfiguration && source
         );

#endif

#if( /* {public Assign}. */ 1 )

      // yg? Should this be named {Move}?

      public: void Assign
         ( TEntryOrderConfiguration && source
         );

#endif

#if( /* {public Validate}. */ 1 )

      // yg? This might need a parameter specifying configuration extraction state. Or better add a method with that parameter to the helpers.

      public: void Validate() const;

#endif
   };
}
