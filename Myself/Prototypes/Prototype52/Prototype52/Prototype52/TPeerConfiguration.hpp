#pragma once

//#include "./.hpp"

#include "../Common/SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace Prototype52
{
   // See the config file for more info.
   // yg? Am I happy with the order of members in this class?
   // yg? See {TEconomicReportDownloaderWithTcpParallelRequestsBase<>::TTcpRequestInternalConfiguration_} comment.
   // yg? Consider naming this class more descriptively, like that this is used for sending peer message only. And/or use the word
   // yg? "strategy peer" or "peer strategy" everywhere in the codebase.

   class TPeerConfiguration
   {
#if( /* {public Id}. */ 1 )

      //
      public: char Id;

#endif
#if( /* {public PeerIPHostName}. */ 1 )

      //
      public: ::std::string PeerIPHostName;

#endif
#if( /* {public PeerIPPortNumber}. */ 1 )

      //
      public: unsigned short PeerIPPortNumber;

#endif
#if( /* {public LocalIPHostName}. */ 1 )

      //
      public: ::std::string LocalIPHostName;

#endif

#if( /* {public} Instance default constructor. */ 1 )

      //

      public: explicit TPeerConfiguration();

#endif
#if( /* {private} Instance copy constructor. */ 1 )

      //

      private: explicit TPeerConfiguration
         ( TPeerConfiguration const & source
         );

#endif
#if( /* {public} Instance move constructor. */ 1 )

      //

      public: TPeerConfiguration
         ( TPeerConfiguration && source
         );

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.

#endif
#if( /* {private operator =}. */ 1 )

      //

      private: TPeerConfiguration & operator =
         ( TPeerConfiguration const & source
         );

#endif
#if( /* {public operator =}. */ 1 )

      //

      public: TPeerConfiguration & operator =
         ( TPeerConfiguration && source
         );

#endif

#if( /* {public Assign}. */ 1 )

      // yg? Should this be named {Move}?

      public: void Assign
         ( TPeerConfiguration && source
         );

#endif

#if( /* {public Validate}. */ 1 )

      // yg? This might need a parameter specifying configuration extraction state. Or better add a method with that parameter to the helpers.

      public: void Validate() const;

#endif
   };
}
