#pragma once

//#include "./.hpp"

#include "../Common/SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace Prototype52
{
   // See the config file for more info.

   class TTcpRequestConfiguration
   {
#if( /* {public LocalIPHostName}. */ 1 )

      //
      public: ::std::string LocalIPHostName;

#endif
#if( /* {public ShallAdvanceSocketNextDynamicPortNumber}. */ 1 )

      //
      public: bool ShallAdvanceSocketNextDynamicPortNumber;

#endif
#if( /* {public DestinationUrlAsString}. */ 1 )

      //
      public: ::std::string DestinationUrlAsString;

#endif
#if( /* {public RequestContent}. */ 1 )

      //
      public: ::std::string RequestContent;

#endif
#if( /* {public NumberRequestsToSend}. */ 1 )

      //
      public: int NumberRequestsToSend;

#endif
#if( /* {public RequestsPreSendingBitMask}. */ 1 )

      //
      public: unsigned int RequestsPreSendingBitMask;

#endif
#if( /* {public FirstRequestSendingTimeOffsetMilliseconds}. */ 1 )

      //
      public: double FirstRequestSendingTimeOffsetMilliseconds;

#endif
#if( /* {public RequestSendingIntervalMilliseconds}. */ 1 )

      //
      public: double RequestSendingIntervalMilliseconds;

#endif

#if( /* {public} Instance default constructor. */ 1 )

      //

      public: explicit TTcpRequestConfiguration();

#endif
#if( /* {private} Instance copy constructor. */ 1 )

      //

      private: explicit TTcpRequestConfiguration
         ( TTcpRequestConfiguration const & source
         );

#endif
#if( /* {public} Instance move constructor. */ 1 )

      //

      public: TTcpRequestConfiguration
         ( TTcpRequestConfiguration && source
         );

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.

#endif
#if( /* {private operator =}. */ 1 )

      //

      private: TTcpRequestConfiguration & operator =
         ( TTcpRequestConfiguration const & source
         );

#endif
#if( /* {public operator =}. */ 1 )

      //

      public: TTcpRequestConfiguration & operator =
         ( TTcpRequestConfiguration && source
         );

#endif

#if( /* {public Assign}. */ 1 )

      // yg? Should this be named {Move}?

      public: void Assign
         ( TTcpRequestConfiguration && source
         );

#endif

#if( /* {public Validate}. */ 1 )

      // yg? This might need a parameter specifying configuration extraction state. Or better add a method with that parameter to the helpers.

      public: void Validate() const;

#endif
   };
}
