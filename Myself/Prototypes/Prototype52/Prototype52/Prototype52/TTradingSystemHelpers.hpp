#pragma once

#include "./TTradingSystemConfiguration.hpp"

#include "../Common/SourceCodeModel/IncrementHeaderInclusionBalance.hpp"

namespace Prototype52
{
   //

   class TTradingSystemHelpers abstract sealed
   {
#if( /* //{(private)} Instance default constructor. */ 1 )

      // Cannot be autogenerated.

#endif
#if( /* //{(private)} Instance copy constructor. */ 1 )

      // Cannot be autogenerated.

#endif
#if( /* {(public)} Instance destructor. */ 1 )

      // Could be autogenerated.

#endif
#if( /* //{(private) operator =}. */ 1 )

      // Cannot be autogenerated.

#endif

#if( /* {public CreateAndRunTradingSystem}. */ 1 )

      // {configuration1} will be {reset} as soon as possible.

      public: static void CreateAndRunTradingSystem
         ( ::std::unique_ptr< TTradingSystemConfiguration > && configuration1
         );

#endif
#if( /* {public CreateAndRunTradingSystems}. */ 1 )

      //

      public:
         template
            < typename TTradingSystemsConfigurationUniquePtrIterator_
            >
         static void CreateAndRunTradingSystems
            ( TTradingSystemsConfigurationUniquePtrIterator_ tradingSystemsConfigurationUniquePtrBeginIterator,
              TTradingSystemsConfigurationUniquePtrIterator_ tradingSystemsConfigurationUniquePtrEndIterator
            );

#endif
   };
}
